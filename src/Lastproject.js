import { useState } from "react";
import Confetti from 'react-confetti';
export const words = [
  "about",
  "account",
  "across",
  "addition",
  "after",
  "again",
  "against",
  "agreement",
  "almost",
  "among",
  "amount",
  "amusement",
  "angle",
  "angry",
  "animal",
  "answer",
  "apparatus",
  "apple",
  "approval",
  "argument",
  "attack",
  "attempt",
  "attention",
  "authority",
  "automatic",
  "awake",
  "balance",
  "basin",
  "basket",
  "beautiful",
  "because",
  "before",
  "behaviour",
  "belief",
  "berry",
  "between",
  "birth",
  "bitter",
  "black",
  "blade",
  "blood",
  "board",
  "boiling",
  "bottle",
  "brain",
  "brake",
  "branch",
  "brass",
  "bread",
  "breath",
  "brick",
  "bridge",
  "bright",
  "broken",
  "brother",
  "brown",
  "brush",
  "bucket",
  "building",
  "burst",
  "business",
  "butter",
  "button",
  "camera",
  "canvas",
  "carriage",
  "cause",
  "certain",
  "chain",
  "chalk",
  "chance",
  "change",
  "cheap",
  "cheese",
  "chemical",
  "chest",
  "chief",
  "church",
  "circle",
  "clean",
  "clear",
  "clock",
  "cloth",
  "cloud",
  "collar",
  "colour",
  "comfort",
  "committee",
  "common",
  "company",
  "complete",
  "complex",
  "condition",
  "conscious",
  "control",
  "copper",
  "cotton",
  "cough",
  "country",
  "cover",
  "crack",
  "credit",
  "crime",
  "cruel",
  "crush",
  "current",
  "curtain",
  "curve",
  "cushion",
  "damage",
  "danger",
  "daughter",
  "death",
  "decision",
  "degree",
  "delicate",
  "dependent",
  "design",
  "desire",
  "detail",
  "different",
  "digestion",
  "direction",
  "dirty",
  "discovery",
  "disease",
  "disgust",
  "distance",
  "division",
  "doubt",
  "drain",
  "drawer",
  "dress",
  "drink",
  "driving",
  "early",
  "earth",
  "education",
  "effect",
  "elastic",
  "electric",
  "engine",
  "enough",
  "equal",
  "error",
  "event",
  "every",
  "example",
  "exchange",
  "existence",
  "expansion",
  "expert",
  "false",
  "family",
  "father",
  "feather",
  "feeble",
  "feeling",
  "female",
  "fertile",
  "fiction",
  "field",
  "fight",
  "finger",
  "first",
  "fixed",
  "flame",
  "flight",
  "floor",
  "flower",
  "foolish",
  "force",
  "forward",
  "frame",
  "frequent",
  "friend",
  "front",
  "fruit",
  "future",
  "garden",
  "general",
  "glass",
  "glove",
  "grain",
  "grass",
  "great",
  "green",
  "group",
  "growth",
  "guide",
  "hammer",
  "hanging",
  "happy",
  "harbour",
  "harmony",
  "healthy",
  "hearing",
  "heart",
  "history",
  "hollow",
  "horse",
  "hospital",
  "house",
  "humour",
  "important",
  "impulse",
  "increase",
  "industry",
  "insect",
  "insurance",
  "interest",
  "invention",
  "island",
  "jelly",
  "jewel",
  "journey",
  "judge",
  "kettle",
  "knife",
  "knowledge",
  "language",
  "laugh",
  "learning",
  "leather",
  "letter",
  "level",
  "library",
  "light",
  "limit",
  "linen",
  "liquid",
  "little",
  "living",
  "loose",
  "machine",
  "manager",
  "market",
  "married",
  "match",
  "material",
  "measure",
  "medical",
  "meeting",
  "memory",
  "metal",
  "middle",
  "military",
  "minute",
  "mixed",
  "money",
  "monkey",
  "month",
  "morning",
  "mother",
  "motion",
  "mountain",
  "mouth",
  "muscle",
  "music",
  "narrow",
  "nation",
  "natural",
  "necessary",
  "needle",
  "nerve",
  "night",
  "noise",
  "normal",
  "north",
  "number",
  "offer",
  "office",
  "operation",
  "opinion",
  "opposite",
  "orange",
  "order",
  "ornament",
  "other",
  "owner",
  "paint",
  "paper",
  "parallel",
  "parcel",
  "paste",
  "payment",
  "peace",
  "pencil",
  "person",
  "physical",
  "picture",
  "place",
  "plane",
  "plant",
  "plate",
  "please",
  "pleasure",
  "plough",
  "pocket",
  "point",
  "poison",
  "polish",
  "political",
  "porter",
  "position",
  "possible",
  "potato",
  "powder",
  "power",
  "present",
  "price",
  "print",
  "prison",
  "private",
  "probable",
  "process",
  "produce",
  "profit",
  "property",
  "prose",
  "protest",
  "public",
  "purpose",
  "quality",
  "question",
  "quick",
  "quiet",
  "quite",
  "range",
  "reaction",
  "reading",
  "ready",
  "reason",
  "receipt",
  "record",
  "regret",
  "regular",
  "relation",
  "religion",
  "request",
  "respect",
  "reward",
  "rhythm",
  "right",
  "river",
  "rough",
  "round",
  "scale",
  "school",
  "science",
  "scissors",
  "screw",
  "second",
  "secret",
  "secretary",
  "selection",
  "sense",
  "separate",
  "serious",
  "servant",
  "shade",
  "shake",
  "shame",
  "sharp",
  "sheep",
  "shelf",
  "shirt",
  "shock",
  "short",
  "silver",
  "simple",
  "sister",
  "skirt",
  "sleep",
  "slope",
  "small",
  "smash",
  "smell",
  "smile",
  "smoke",
  "smooth",
  "snake",
  "sneeze",
  "society",
  "solid",
  "sound",
  "south",
  "space",
  "spade",
  "special",
  "sponge",
  "spoon",
  "spring",
  "square",
  "stage",
  "stamp",
  "start",
  "statement",
  "station",
  "steam",
  "steel",
  "stick",
  "sticky",
  "stiff",
  "still",
  "stitch",
  "stocking",
  "stomach",
  "stone",
  "store",
  "story",
  "straight",
  "strange",
  "street",
  "stretch",
  "strong",
  "structure",
  "substance",
  "sudden",
  "sugar",
  "summer",
  "support",
  "surprise",
  "sweet",
  "system",
  "table",
  "taste",
  "teaching",
  "tendency",
  "theory",
  "there",
  "thick",
  "thing",
  "thought",
  "thread",
  "throat",
  "through",
  "through",
  "thumb",
  "thunder",
  "ticket",
  "tight",
  "tired",
  "together",
  "tomorrow",
  "tongue",
  "tooth",
  "touch",
  "trade",
  "train",
  "transport",
  "trick",
  "trouble",
  "trousers",
  "twist",
  "umbrella",
  "under",
  "value",
  "verse",
  "vessel",
  "violent",
  "voice",
  "waiting",
  "waste",
  "watch",
  "water",
  "weather",
  "weight",
  "wheel",
  "where",
  "while",
  "whistle",
  "white",
  "window",
  "winter",
  "woman",
  "wound",
  "writing",
  "wrong",
  "yellow",
  "yesterday",
  "young"
];
export function getFarewellText(language) {
    const options = [
        `Farewell, ${language}`,
        `Adios, ${language}`,
        `R.I.P., ${language}`,
        `We'll miss you, ${language}`,
        `Oh no, not ${language}!`,
        `${language} bites the dust`,
        `Gone but not forgotten, ${language}`,
        `The end of ${language} as we know it`,
        `Off into the sunset, ${language}`,
        `${language}, it's been real`,
        `${language}, your watch has ended`,
        `${language} has left the building`
    ];
    const randomIndex = Math.floor(Math.random() * options.length);
    return options[randomIndex];
}
export const languages = [
    {
        name: "HTML",
        backgroundColor: "#E2680F",
        color: "#F9F4DA",
    },
    {
        name: "CSS",
        backgroundColor: "#328AF1",
        color: "#F9F4DA",
    },
    {
        name: "JavaScript",
        backgroundColor: "#F4EB13",
        color: "#1E1E1E",
    },
    {
        name: "React",
        backgroundColor: "#2ED3E9",
        color: "#1E1E1E",
    },
    {
        name: "TypeScript",
        backgroundColor: "#298EC6",
        color: "#F9F4DA",
    },
    {
        name: "Node.js",
        backgroundColor: "#599137",
        color: "#F9F4DA",
    },
    {
        name: "Python",
        backgroundColor: "#FFD742",
        color: "#1E1E1E",
    },
    {
        name: "Ruby",
        backgroundColor: "#D02B2B",
        color: "#F9F4DA",
    },
    {
        name: "Assembly",
        backgroundColor: "#2D519F",
        color: "#F9F4DA",
    },
];
function getrandom(){
  const randomIndex=Math.floor(Math.random()*words.length);
  return words[randomIndex];
}
export default function Last(){
  const[currentword,setcurrentword]=useState(getrandom());
  const[guessedletters,setguessedletters]=useState([]);
  const wrongguessedarray=guessedletters.filter((letter)=>!currentword.includes(letter));
  const isgamewon=currentword.split('').every(letter=>guessedletters.includes(letter));
  const isgamelost=wrongguessedarray.length>=languages.length-1;
  const isgameover=isgamewon||isgamelost;
  const alphabet='abcdefghijklmnopqrstuvwxyz';
  function addguessedletter(letter){
    setguessedletters((prev)=>prev.includes(letter)?prev:[...prev,letter]);
  }
  const lastguessedletters=guessedletters[guessedletters.length-1];
  const islastguessincorrect=lastguessedletters&&!currentword.includes(lastguessedletters);
  function newgame(){
setcurrentword(getrandom());
setguessedletters([]);
  }
  function render(){
    if(!isgameover&&islastguessincorrect){
      return<p>Bye!</p>
    }
    if(isgamewon){
      return(
        <>
        <h2>you win</h2>
        <p>well done</p>
        </>
      )
    }
    if(isgamelost){
      return(
        <><h2>game over</h2>
        <p>you lost</p></>
      )
    }
    return null;
  }
  console.log(islastguessincorrect);
  return(
    <>
    <main>
      {
        isgamewon&&<Confetti/>
      }
    <h1>assembly end game</h1>
    </main>
    <section>
      {render()}
    </section>
    <section>
    {languages.map((ele,index)=>{
    const islanguagelost=index<wrongguessedarray.length;
    return(  <span style={{display:"inline-block",margin:'5px',backgroundColor:'yellow'}}>{ele.name}</span>)})}
    </section>
    <section style={{display:'flex', justifyContent:'center',alignItems:'center',gap:'10px'}}>
      <p>{currentword.includes(lastguessedletters)?`correct ${lastguessedletters} is in the word`:`sorry ${lastguessedletters} is not in the word `}
        you have {languages.length-1} attempts left
      </p>
    <p>current word:{currentword.split('').map((letter)=>{const shouldreveal=isgamelost||guessedletters.includes(letter);return shouldreveal?letter.toUpperCase():''}).join('')}</p>
    </section>
    <section>{alphabet.split('').map((ele)=>(<button disabled={isgameover} onClick={()=>addguessedletter(ele)}>{ele.toUpperCase()}</button>))}</section>
    {isgameover&&<button onClick={newgame}>newgame</button>}
    </>
  )
}